[{"C:\\Users\\joaod\\development\\healthy-food\\src\\index.tsx":"1","C:\\Users\\joaod\\development\\healthy-food\\src\\App.tsx":"2","C:\\Users\\joaod\\development\\healthy-food\\src\\Routes.tsx":"3","C:\\Users\\joaod\\development\\healthy-food\\src\\pages\\Register.tsx":"4","C:\\Users\\joaod\\development\\healthy-food\\src\\pages\\Home.tsx":"5","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Register\\Register.tsx":"6","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\Home.tsx":"7","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\layout\\BasicLayout\\BasicLayout.tsx":"8","C:\\Users\\joaod\\development\\healthy-food\\src\\styles\\metrics.ts":"9","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\Landing\\Landing.tsx":"10","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\OurRecipes\\OurRecipes.tsx":"11","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\BestServices\\BestServices.tsx":"12","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\JoinMembership\\JoinMembership.tsx":"13","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Container\\Container.tsx":"14","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Page\\Page.tsx":"15","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Form\\Input\\Input.tsx":"16","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\ReadOurBlog\\ReadOurBlog.tsx":"17","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Button\\Button.tsx":"18","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Subtitle\\Subtitle.tsx":"19","C:\\Users\\joaod\\development\\healthy-food\\src\\styles\\GlobalStyles.tsx":"20","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\modules\\Footer\\Footer.tsx":"21","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\modules\\Header\\Header.tsx":"22","C:\\Users\\joaod\\development\\healthy-food\\src\\styles\\colors.ts":"23","C:\\Users\\joaod\\development\\healthy-food\\src\\styles\\breakpoints.ts":"24","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Title\\Title.tsx":"25","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Subsection\\Subsection.tsx":"26","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Paragraph\\Paragraph.tsx":"27","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\ReadOurBlog\\BlogPosts.tsx":"28","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\modules\\Card\\Card.tsx":"29","C:\\Users\\joaod\\development\\healthy-food\\src\\hooks\\components\\templates\\Home\\ReadOurBlog\\useBlogPostsArrowButtons.ts":"30","C:\\Users\\joaod\\development\\healthy-food\\src\\routes.tsx":"31"},{"size":195,"mtime":1610986039873,"results":"32","hashOfConfig":"33"},{"size":145,"mtime":1610986252595,"results":"34","hashOfConfig":"33"},{"size":425,"mtime":1610984807296,"results":"35","hashOfConfig":"33"},{"size":344,"mtime":1610984376371,"results":"36","hashOfConfig":"33"},{"size":269,"mtime":1610984348440,"results":"37","hashOfConfig":"33"},{"size":9152,"mtime":1610983415243,"results":"38","hashOfConfig":"33"},{"size":521,"mtime":1610988199769,"results":"39","hashOfConfig":"33"},{"size":723,"mtime":1610988177786,"results":"40","hashOfConfig":"33"},{"size":1707,"mtime":1610981849404,"results":"41","hashOfConfig":"33"},{"size":5678,"mtime":1610987584707,"results":"42","hashOfConfig":"33"},{"size":6082,"mtime":1610985207833,"results":"43","hashOfConfig":"33"},{"size":3128,"mtime":1610988655388,"results":"44","hashOfConfig":"33"},{"size":4587,"mtime":1610988718311,"results":"45","hashOfConfig":"33"},{"size":200,"mtime":1610982476261,"results":"46","hashOfConfig":"33"},{"size":276,"mtime":1610982522202,"results":"47","hashOfConfig":"33"},{"size":549,"mtime":1610982509872,"results":"48","hashOfConfig":"33"},{"size":1223,"mtime":1610983414873,"results":"49","hashOfConfig":"33"},{"size":2503,"mtime":1610984065157,"results":"50","hashOfConfig":"33"},{"size":874,"mtime":1610982577089,"results":"51","hashOfConfig":"33"},{"size":3209,"mtime":1610984507744,"results":"52","hashOfConfig":"33"},{"size":2504,"mtime":1610987490477,"results":"53","hashOfConfig":"33"},{"size":9693,"mtime":1610987454386,"results":"54","hashOfConfig":"33"},{"size":573,"mtime":1610981849391,"results":"55","hashOfConfig":"33"},{"size":772,"mtime":1610981849389,"results":"56","hashOfConfig":"33"},{"size":589,"mtime":1610982593305,"results":"57","hashOfConfig":"33"},{"size":160,"mtime":1610982557005,"results":"58","hashOfConfig":"33"},{"size":560,"mtime":1610982552828,"results":"59","hashOfConfig":"33"},{"size":8438,"mtime":1610987584708,"results":"60","hashOfConfig":"33"},{"size":3369,"mtime":1610982731184,"results":"61","hashOfConfig":"33"},{"size":1566,"mtime":1610981856239,"results":"62","hashOfConfig":"33"},{"size":425,"mtime":1610988192300,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1urpsrg",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joaod\\development\\healthy-food\\src\\index.tsx",[],["134","135"],"C:\\Users\\joaod\\development\\healthy-food\\src\\App.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\Routes.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\pages\\Register.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\pages\\Home.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Register\\Register.tsx",["136"],"import React from 'react'\r\nimport Button from \"../../elements/Button/Button\"\r\nimport container from \"../../elements/Container/Container\"\r\nimport Input from \"../../elements/Form/Input/Input\"\r\nimport page from \"../../elements/Page/Page\"\r\nimport {H1 as Title} from '../../elements/Subtitle/Subtitle'\r\nimport metrics from \"../../../styles/metrics\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nlet timeout: any\r\n\r\nconst Register = () => {\r\n    const [cep, setCep] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n    const [requestResponse, setRequestResponse] = useState(false)\r\n    const nameRef = useRef<HTMLInputElement>(null)\r\n    const dateRef = useRef<HTMLInputElement>(null)\r\n    const cpfRef = useRef<HTMLInputElement>(null)\r\n    const streetRef = useRef<HTMLInputElement>(null)\r\n    const numberRef = useRef<HTMLInputElement>(null)\r\n    const complementRef = useRef<HTMLInputElement>(null)\r\n    const neighborhoodRef = useRef<HTMLInputElement>(null)\r\n    const cityRef = useRef<HTMLInputElement>(null)\r\n    const stateRef = useRef<HTMLInputElement>(null)\r\n    const [,setUpdate] = useState(0)\r\n\r\n    function searchCep(){\r\n        if(cep){\r\n            fetch('https://brasilapi.com.br/api/cep/v1/'+cep)\r\n            .then(response => response.json().then(response => {\r\n                setRequestResponse(true)\r\n\r\n                if(!response.errors && streetRef.current && numberRef.current && neighborhoodRef.current && stateRef.current && cityRef.current){\r\n                    setError('')\r\n                    streetRef.current.value = response.street\r\n                    neighborhoodRef.current.value = response.neighborhood\r\n                    cityRef.current.value = response.city\r\n                    stateRef.current.value = response.state\r\n                }else{\r\n                    setRequestResponse(false)\r\n                    if(response?.erros[0]){\r\n                        setError(response.errors[0].message)\r\n                        setSuccess('')\r\n                    }\r\n                }\r\n            }))\r\n            .catch(() => {\r\n                setRequestResponse(false)\r\n                setSuccess('')\r\n                setError('Ocorreu um erro ao procurar pelo CEP.')\r\n            })\r\n        }\r\n    }\r\n\r\n    function clickSubmit(){\r\n        if(nameRef?.current?.value && dateRef?.current?.value && cpfRef?.current?.value && cep && streetRef?.current?.value &&\r\n            numberRef?.current?.value && neighborhoodRef?.current?.value && cityRef?.current?.value && stateRef?.current?.value){\r\n                setError('')\r\n                setSuccess('Dados cadastrados com sucesso!')\r\n                localStorage.setItem('user', JSON.stringify({\r\n                    name: nameRef.current.value,\r\n                    date: dateRef.current.value,\r\n                    cpf: cpfRef.current.value,\r\n                    cep: cep,\r\n                    street: streetRef.current.value,\r\n                    number: numberRef.current.value,\r\n                    neighborhood: neighborhoodRef.current.value,\r\n                    city: cityRef.current.value,\r\n                    state: stateRef.current.value,\r\n                    complement: complementRef?.current?.value || ''\r\n                }))\r\n                console.log(localStorage.getItem('user'))\r\n        }else{\r\n            setSuccess('')\r\n            setError('Por favor, preencha todos os campos.')\r\n            setUpdate(old => old + 1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(timeout)\r\n            clearTimeout(timeout)\r\n\r\n        timeout = setTimeout(searchCep, 750)\r\n    },[cep])\r\n\r\n    useEffect(() => {\r\n        if(success || error){\r\n            window.scrollTo(0,0)\r\n        }\r\n    },[success, error])\r\n\r\n    return(\r\n        <Page>\r\n            <Container>\r\n                <FormWrapper showAddressFields={requestResponse}>\r\n                    <Title>Cadastro</Title>\r\n                    <Success show={success ? true : false}>{success}</Success>\r\n                    <Error show={error ? true : false}>{error}</Error>\r\n                    <Fieldset error={error && !nameRef?.current?.value ? true : false}>\r\n                        <label htmlFor=\"data\">Nome completo</label>\r\n                        <Input ref={nameRef} id=\"nome\" type=\"text\" placeholder=\"José da Silva\"/>\r\n                    </Fieldset>\r\n                    <Fieldset error={error && !dateRef?.current?.value ? true : false}>\r\n                        <label htmlFor=\"data\">Data de nascimento</label>\r\n                        <Input ref={dateRef} id=\"data\" type=\"date\"/>\r\n                    </Fieldset>\r\n                    <Fieldset error={error && !cpfRef?.current?.value ? true : false}>\r\n                        <label htmlFor=\"data\">CPF</label>\r\n                        <Input ref={cpfRef} id=\"cpf\" type=\"text\" placeholder=\"xxx.xxx.xxx-xx\"/>\r\n                    </Fieldset>\r\n                    <Fieldset error={error && !cep ? true : false}>\r\n                        <label htmlFor=\"data\">CEP</label>\r\n                        <Input id=\"cep\" type=\"number\" placeholder=\"xxxxx-xxx\" value={cep} onChange={e => setCep(e.target.value.toString())}/>\r\n                    </Fieldset>\r\n                    <FieldsetAddress error={error && !streetRef?.current?.value ? true : false}>\r\n                        <label htmlFor=\"endereco\">Endereço</label>\r\n                        <Input ref={streetRef} id=\"endereco\" type=\"text\" placeholder=\"Endereço\"/>\r\n                    </FieldsetAddress>\r\n                    <FieldsetAddress error={error && !numberRef?.current?.value ? true : false}>\r\n                        <label htmlFor=\"numero\">Número</label>\r\n                        <Input ref={numberRef} id=\"numero\" type=\"text\" placeholder=\"Número\"/>\r\n                    </FieldsetAddress>\r\n                    <FieldsetAddress error={false}>\r\n                        <label htmlFor=\"complemento\">Complemento</label>\r\n                        <Input ref={complementRef} id=\"complemento\" type=\"text\" placeholder=\"Complemento\"/>\r\n                    </FieldsetAddress>\r\n                    <FieldsetAddress error={error && !neighborhoodRef?.current?.value ? true : false}>\r\n                        <label htmlFor=\"bairro\">Bairro</label>\r\n                        <Input ref={neighborhoodRef} id=\"bairro\" type=\"text\" placeholder=\"Bairro\"/>\r\n                    </FieldsetAddress>\r\n                    <FieldsetAddress error={error && !cityRef?.current?.value ? true : false}>\r\n                        <label htmlFor=\"cidade\">Cidade</label>\r\n                        <Input ref={cityRef} id=\"cidade\" type=\"text\" placeholder=\"Cidade\"/>\r\n                    </FieldsetAddress>\r\n                    <FieldsetAddress error={error && !stateRef?.current?.value ? true : false}>\r\n                        <label htmlFor=\"estado\">Estado</label>\r\n                        <Input ref={stateRef} id=\"estado\" type=\"text\" placeholder=\"Estado\"/>\r\n                    </FieldsetAddress>\r\n                    <Button onClick={clickSubmit} btnStyle=\"bold-primary\" effects={{blur: true}}>Cadastrar</Button>\r\n                </FormWrapper>\r\n            </Container>\r\n        </Page>\r\n    )\r\n}\r\n\r\nconst Success = styled.strong<{show: boolean}>`\r\n    text-align: center;\r\n    font-size: ${metrics.fontSize.text};\r\n    font-style: normal;\r\n    margin: 16px 0 0 0;\r\n    color: forestgreen;\r\n    display: none;\r\n\r\n    ${({show}) => {\r\n        if(show) return`\r\n            display: block;\r\n        `\r\n    }}\r\n`\r\n\r\nconst Error = styled(Success)`\r\n    color: red;\r\n`\r\n\r\nconst Fieldset = styled.fieldset<{error: boolean}>`\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    margin: 16px 0 0 0;\r\n    width: 100%;\r\n\r\n    label{\r\n        margin: 0 0 8px 0;\r\n    }\r\n\r\n    ${Input}{\r\n        padding-top: 12px;\r\n        padding-bottom: 12px;\r\n        transition: border-color .25s;\r\n\r\n        ${({error}) => {\r\n            if(error) return `\r\n                border-color: red;\r\n            `\r\n        }}\r\n    }\r\n`\r\n\r\nconst FieldsetAddress = styled(Fieldset)`\r\n    display: none;\r\n`\r\n\r\nconst FormWrapper = styled.div<{showAddressFields: boolean}>`\r\n    width: 500px;\r\n    max-width: 100%;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n    padding: 24px 32px;\r\n    border: ${metrics.border.width} solid #ddd;\r\n    border-radius: ${metrics.border.radius};\r\n    box-shadow: ${metrics.effects.shadow};\r\n\r\n    ${Button}{\r\n        margin: 32px 0 0 0;\r\n        padding: 16px 32px;\r\n        text-transform: uppercase;\r\n        font-weight: ${metrics.fontWeight.boldButton};\r\n        letter-spacing: ${metrics.letterSpacing.boldButton};\r\n    }\r\n\r\n    ${({showAddressFields}) => {\r\n        if(showAddressFields) return `\r\n            ${FieldsetAddress}{\r\n                display: flex;\r\n            }\r\n        `\r\n    }}\r\n`\r\n\r\nconst Container = styled(container)`\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n`\r\n\r\nconst Page = styled(page)`\r\n    padding-top: calc(100px + var(--PageHorizontalSpacing));\r\n`\r\n\r\nexport default Register","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\Home.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\layout\\BasicLayout\\BasicLayout.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\styles\\metrics.ts",["137"],"const spacer = '1rem'\r\n\r\nexport const spacing = {\r\n    0: '0',\r\n    1: `calc(${spacer} * .25)`,\r\n    2: `calc(${spacer}* .5)`,\r\n    3: `calc(${spacer} * 1)`,\r\n    4: `calc(${spacer} * 1.5)`,\r\n    5: `calc(${spacer} * 3)`,\r\n    spacer\r\n}\r\n\r\nexport const fontSpacing = {\r\n    text: {\r\n        top: \"16px\",\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0\r\n    }\r\n}\r\n\r\nexport const fontFamily = {\r\n    title: 'montserrat, proxima nova, gibson, avenir, roboto, sans-serif',\r\n    subtitle: 'montserrat, proxima nova, gibson, avenir, roboto, sans-serif',\r\n    text: 'muli, Nunito, Roboto, Helvetica, sans-serif'\r\n}\r\n\r\nexport const fontSize = {\r\n    title: '48px',\r\n    subtitle: '32px',\r\n    text: '16px',\r\n    button: '16px',\r\n}\r\n\r\nexport const fontWeight = {\r\n    title: '700',\r\n    subtitle: '700',\r\n    text: '400',\r\n    button: '300',\r\n    boldButton: '700'\r\n}\r\n\r\nexport const lineHeight = {\r\n    title: 1.45,\r\n    subtitle: 1.34,\r\n    text: 1.68\r\n}\r\n\r\nexport const letterSpacing = {\r\n    title: \"1.6px\",\r\n    subtitle: \"1.06px\",\r\n    text: \"1.87px\",\r\n    button: '0.48px',\r\n    boldButton: '0.32px'\r\n}\r\n\r\nexport const border = {\r\n    width: \"1px\",\r\n    radius: '5px'\r\n}\r\n\r\nexport const zIndex = {\r\n    header: 100\r\n}\r\n\r\nexport const effects = {\r\n    shadow: \"0px 15px 20px #1D164D14\"\r\n}\r\n\r\nexport const card = {\r\n    font: {\r\n        size: \"24px\",\r\n        weight: 700,\r\n        lineHeight: 1.41,\r\n        letterSpacing: \"0.72px\",\r\n        align: \"left\"\r\n    },\r\n    border: {\r\n        radius: \"7px\"\r\n    }\r\n}\r\n\r\nexport default {\r\n    spacing,\r\n    fontSpacing,\r\n    fontFamily,\r\n    fontSize,\r\n    fontWeight,\r\n    lineHeight,\r\n    letterSpacing,\r\n    border,\r\n    zIndex,\r\n    card,\r\n    effects\r\n}","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\Landing\\Landing.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\OurRecipes\\OurRecipes.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\BestServices\\BestServices.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\JoinMembership\\JoinMembership.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Container\\Container.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Page\\Page.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Form\\Input\\Input.tsx",["138"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport colors from '../../../../styles/colors'\r\nimport metrics from '../../../../styles/metrics'\r\n\r\nconst Input = styled.input`\r\n    padding: 16px 16px;\r\n    border: ${metrics.border.width} solid ${colors.border};\r\n    border-radius: ${metrics.border.radius};\r\n    background: ${colors.white};\r\n    &, &::placeholder{\r\n        font-size: ${metrics.fontSize.text};\r\n        font-weight: ${metrics.fontSize.text};\r\n        color: ${colors.font.text};\r\n    }\r\n`\r\n\r\nexport default Input","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\ReadOurBlog\\ReadOurBlog.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Button\\Button.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Subtitle\\Subtitle.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\styles\\GlobalStyles.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\modules\\Footer\\Footer.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\modules\\Header\\Header.tsx",["139"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport container from '../../elements/Container/Container'\r\nimport Button from '../../elements/Button/Button'\r\nimport colors from '../../../styles/colors'\r\nimport metrics from '../../../styles/metrics'\r\nimport breakpoints from '../../../styles/breakpoints'\r\nimport logo from '../../../assets/images/logo.png'\r\nimport Close from '../../../assets/images/svg/icons/close.svg'\r\nimport Menu from '../../../assets/images/svg/icons/menu.svg'\r\n\r\nconst Header = (props: {showBackground?: boolean}) => {\r\n    const headerRef = useRef<HTMLDivElement>(null)\r\n    const [showBackground, setShowBackground] = useState(props.showBackground ? true : false)\r\n    const [showMenu, setShowMenu] = useState(false)\r\n\r\n    const handleScroll = () => {\r\n        if(window.innerWidth > 950){\r\n            if(headerRef.current && window.scrollY > headerRef.current?.getBoundingClientRect().bottom)\r\n                setShowBackground(true)\r\n            else\r\n                setShowBackground(false)\r\n        }else\r\n            handleResize()\r\n    }\r\n\r\n    const handleResize = () => {\r\n        if(window.innerWidth <= 950)\r\n            setShowBackground(true)\r\n        else\r\n            setShowBackground(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!props.showBackground){\r\n            handleScroll()\r\n            handleResize()\r\n            window.addEventListener('resize', handleResize)\r\n            window.addEventListener('scroll', handleScroll);\r\n            return () => {\r\n                window.removeEventListener('resize', handleResize)\r\n                window.removeEventListener('scroll', handleScroll)\r\n            }\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <>\r\n            <HeaderStyled showBackground={showBackground} ref={headerRef}>\r\n                <Container>\r\n                    <Logo>\r\n                        <Link to=\"/\">\r\n                            <img src={logo} alt=\"\"/>\r\n                        </Link>\r\n                    </Logo>    \r\n                    <Nav showBackground={showBackground}>\r\n                        <a href=\"#our-best-recipes\">\r\n                            <span>Healthy recipes</span>\r\n                        </a>\r\n                        <a href=\"#our-blog\">\r\n                            <span>Blog</span>\r\n                        </a>\r\n                        <a href=\"#join-membership\">\r\n                            <span>Join</span>\r\n                        </a>\r\n                        <Link to=\"/register\">\r\n                            <Button\r\n                                btnStyle={!showBackground ? \"bold-secondary\" : \"bold-primary\"}\r\n                                effects={{boxShadowOnHover: true}}\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </Link>\r\n                    </Nav>\r\n                    <MenuButton onClick={() => setShowMenu(true)} showBackground={showBackground}>\r\n                        <Menu/>\r\n                    </MenuButton>            \r\n                </Container>   \r\n            </HeaderStyled>    \r\n            <WrapperHeaderMenu showMenu={showMenu}>\r\n                <HeaderMenu showMenu={showMenu}>\r\n                    <button onClick={() => setShowMenu(false)}>\r\n                        <Close/>\r\n                    </button>\r\n                    <a href=\"#our-best-recipes\">\r\n                        <span>Healthy recipes</span>\r\n                    </a>\r\n                    <a href=\"#our-blog\">\r\n                        <span>Blog</span>\r\n                    </a>\r\n                    <a href=\"#join-membership\">\r\n                        <span>Join</span>\r\n                    </a>\r\n                    <Link to=\"/register\">\r\n                        <Button\r\n                            btnStyle=\"bold-primary\"\r\n                            effects={{blur: true}}\r\n                        >Register</Button>\r\n                    </Link>\r\n                </HeaderMenu>\r\n            </WrapperHeaderMenu>\r\n        </>\r\n    )\r\n}\r\n\r\nconst HeaderMenu = styled.nav<{showMenu: boolean}>`\r\n    height: 100%;\r\n    width: auto;\r\n    position: relative;\r\n    box-shadow: -15px 0 20px 20px #1D164D14;\r\n    background: ${colors.white};\r\n    padding: 32px;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    opacity: 0;\r\n    transition: opacity .75s;\r\n    \r\n    & > button{\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n\r\n        svg{\r\n            height: 48px;\r\n            height: 48px;\r\n            color: ${colors.secondary};\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    a{\r\n        margin: 20px 0 0 0;\r\n\r\n        &:first-of-type{\r\n            margin: 40px 0 0 0;\r\n        }\r\n\r\n        span, ${Button}{\r\n            cursor: pointer;\r\n            font-size: 20px;\r\n            font-weight: bold;\r\n            text-transform: uppercase;\r\n        }\r\n\r\n        span{\r\n            color: ${colors.secondary};\r\n            position: relative;\r\n            transition: color .5s;\r\n\r\n            &:before{\r\n                content: '';\r\n                display: block;\r\n                height: 2px;\r\n                width: 100%;\r\n                position: absolute;\r\n                bottom: calc(${metrics.spacing[1]} * -1);\r\n                background: ${colors.secondary};\r\n                transition: opacity .25s;\r\n                opacity: 0;\r\n            }\r\n\r\n            &:hover:before{\r\n                opacity: 1;\r\n            }\r\n        }\r\n\r\n        ${Button}{\r\n            margin: 10px 0 0 0;\r\n            text-align: center;\r\n            width: 100%;\r\n            padding-top: 14px;\r\n            padding-bottom: 14px;\r\n        }\r\n    }\r\n\r\n    @media(max-width: ${breakpoints.tbl}){\r\n        ${({showMenu}) => {\r\n            if(showMenu) return `\r\n                transition: opacity .5s;\r\n                opacity: 1;\r\n                pointer-events: inherit;\r\n                user-select: inherit;\r\n            `\r\n        }}\r\n    }\r\n`\r\n\r\nconst WrapperHeaderMenu = styled.div<{showMenu: boolean}>`\r\n    height: 100%;\r\n    width: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    background: #ffffff09;\r\n    z-index: ${metrics.zIndex.header};\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n    user-select: none;\r\n    overflow: hidden;\r\n    transition: opacity .25s;\r\n\r\n    @media(max-width: ${breakpoints.tbl}){\r\n        ${({showMenu}) => {\r\n            if(showMenu) return `\r\n                transition: opacity .5s;\r\n                opacity: 1;\r\n                pointer-events: inherit;\r\n                user-select: inherit;\r\n            `\r\n        }}\r\n    }\r\n`\r\n\r\nconst MenuButton = styled.div<{showBackground: boolean}>`\r\n    display: none;\r\n    cursor: pointer;\r\n\r\n    @media(max-width: ${breakpoints.tbl}){\r\n        display: block;\r\n    }\r\n\r\n    svg{\r\n        height: 40px;\r\n        width: 40px;\r\n        color: ${({showBackground}) => showBackground ? colors.white : colors.secondary};\r\n        transition: color .25s;\r\n    }\r\n`\r\n\r\nconst Nav = styled.nav<{showBackground: boolean}>`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n\r\n    a{\r\n        padding: 0 5px;\r\n        margin: 0 10px;\r\n\r\n        @media(max-width: ${breakpoints.tbl}){\r\n            display: none;\r\n        }\r\n\r\n        span, ${Button}{\r\n            cursor: pointer;\r\n            font-size: 16px;\r\n            font-weight: bold;\r\n            text-transform: uppercase;\r\n        }\r\n\r\n        span{\r\n            color: ${colors.white};\r\n            position: relative;\r\n            transition: color .5s;\r\n\r\n            &:before{\r\n                content: '';\r\n                display: block;\r\n                height: 2px;\r\n                width: 100%;\r\n                position: absolute;\r\n                bottom: calc(${metrics.spacing[1]} * -1);\r\n                background: ${colors.white};\r\n                transition: opacity .25s;\r\n                opacity: 0;\r\n            }\r\n\r\n            ${({showBackground}) => {\r\n                if(showBackground) return `\r\n                    color: ${colors.secondary};\r\n\r\n                    &:before{\r\n                        background: ${colors.secondary};\r\n                    }\r\n                `\r\n            }}\r\n\r\n            &:hover:before{\r\n                opacity: 1;\r\n            }\r\n        }\r\n\r\n        &:first-child{\r\n            margin-left: 0;\r\n        }\r\n        &:last-child{\r\n            margin-right: 0;\r\n        }\r\n    }\r\n`\r\n\r\nconst Logo = styled.figure`\r\n    height: auto;\r\n    width: auto;\r\n\r\n    a{\r\n        cursor: pointer;\r\n        \r\n        img{\r\n            height: 39px;\r\n            width: auto;\r\n\r\n            @media(max-width: ${breakpoints.sml}){\r\n                height: 30px;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Container = styled(container)`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nconst HeaderStyled = styled.header<{showBackground: boolean}>`\r\n    height: auto;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: ${metrics.zIndex.header};\r\n    padding: var(--HeaderVerticalSpacing) var(--PageHorizontalSpacing);\r\n    transition: background .5s, box-shadow .25s;\r\n\r\n    ${({showBackground}) => {\r\n        if(showBackground) return `\r\n            background: ${colors.white};\r\n            box-shadow: ${metrics.effects.shadow};\r\n        `\r\n    }}\r\n`\r\n\r\nexport default Header","C:\\Users\\joaod\\development\\healthy-food\\src\\styles\\colors.ts",["140"],"export const primary = '#BADC58'\r\nexport const secondary = '#1D164D'\r\nexport const white = '#fff'\r\nexport const whiteSmoke = '#FAFAFC'\r\nexport const border = '#2D3561'\r\n\r\nexport const font = {\r\n    text: '#B4B4B4',\r\n    title: secondary,\r\n    subtitle: secondary,\r\n    button: white,\r\n}\r\n\r\nexport const background = {\r\n    button: primary\r\n}\r\n\r\nexport const card = {\r\n    background: white,\r\n    font: {\r\n        color: secondary,\r\n    }\r\n}\r\n\r\nexport default {\r\n    primary,\r\n    secondary,\r\n    white,\r\n    whiteSmoke,\r\n    border,\r\n    font,\r\n    background,\r\n    card\r\n}","C:\\Users\\joaod\\development\\healthy-food\\src\\styles\\breakpoints.ts",["141"],"export const absoluteDimensions = {\r\n    smp: 320,\r\n    sml: 480,\r\n    tbp: 600,\r\n    tbl: 801,\r\n    lg: 1025,\r\n    xlg: 1281,\r\n    lp: 1366,\r\n    xlp: 1440,\r\n    dp: 1680,\r\n    xdp: 1920\r\n}\r\n\r\nexport const smp = `${absoluteDimensions.smp}px`\r\nexport const sml = `${absoluteDimensions.sml}px`\r\nexport const tbp = `${absoluteDimensions.tbp}px`\r\nexport const tbl = `${absoluteDimensions.tbl}px`\r\nexport const lg = `${absoluteDimensions.lg}px`\r\nexport const xlg = `${absoluteDimensions.xlg}px`\r\nexport const lp = `${absoluteDimensions.lp}px`\r\nexport const xlp = `${absoluteDimensions.xlp}px`\r\nexport const dp = `${absoluteDimensions.dp}px`\r\nexport const xdp = `${absoluteDimensions.xdp}px`\r\n\r\nexport default {absoluteDimensions, smp, sml, tbp, tbl, lg, xlg, lp, xlp, dp, xdp}","C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Title\\Title.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Subsection\\Subsection.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\elements\\Paragraph\\Paragraph.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\templates\\Home\\ReadOurBlog\\BlogPosts.tsx",["142","143","144","145"],"C:\\Users\\joaod\\development\\healthy-food\\src\\components\\modules\\Card\\Card.tsx",[],"C:\\Users\\joaod\\development\\healthy-food\\src\\hooks\\components\\templates\\Home\\ReadOurBlog\\useBlogPostsArrowButtons.ts",["146"],"import { useEffect, useRef, useState } from \"react\"\r\nimport { ShowArrows, Hook } from \"./types\"\r\n\r\nconst useBlogPostsArrowButtons: Hook = ({cardGap, cardWidth}) => {\r\n    const [showArrows, setShowArrows] = useState<ShowArrows>({prev: false, next: true})\r\n    const innerPostsRef = useRef<HTMLDivElement>(null)\r\n\r\n    const manageArrowsState = () => {\r\n        const element = innerPostsRef.current\r\n        if(element){\r\n            let state: ShowArrows = {prev: false, next: true}\r\n            \r\n            if(element.scrollLeft > cardGap){\r\n                state = {...state, prev: true}\r\n            }else{\r\n                state = {...state, prev: false}\r\n            }\r\n\r\n            if(element.offsetWidth + element.scrollLeft >= element.scrollWidth){\r\n                state = {...state, next: false}\r\n            }else{\r\n                state = {...state, next: true}\r\n            }\r\n\r\n            setShowArrows(state)\r\n        }\r\n    }\r\n\r\n    const clickPrevArrow = () => {\r\n        if(innerPostsRef.current){\r\n            innerPostsRef.current.scrollLeft -= cardWidth + cardGap\r\n            setTimeout(manageArrowsState, 750)\r\n        }\r\n    }\r\n    const clickNextArrow = () => {\r\n        if(innerPostsRef.current){\r\n            innerPostsRef.current.scrollLeft += 348 + 48\r\n            setTimeout(manageArrowsState, 750)\r\n        }\r\n    }\r\n\r\n    useEffect(manageArrowsState,[innerPostsRef])\r\n\r\n    return {\r\n        showArrows,\r\n        clickPrevArrow,\r\n        clickNextArrow,\r\n        innerPostsRef\r\n    }\r\n}\r\n\r\nexport default useBlogPostsArrowButtons","C:\\Users\\joaod\\development\\healthy-food\\src\\routes.tsx",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":87,"column":7,"nodeType":"153","endLine":87,"endColumn":12,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":83,"column":1,"nodeType":"157","endLine":95,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"162","line":46,"column":7,"nodeType":"153","endLine":46,"endColumn":9,"suggestions":"163"},{"ruleId":"155","severity":1,"message":"156","line":25,"column":1,"nodeType":"157","endLine":34,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":25,"column":1,"nodeType":"157","endLine":25,"endColumn":83},{"ruleId":"164","severity":1,"message":"165","line":45,"column":29,"nodeType":"166","endLine":45,"endColumn":49},{"ruleId":"164","severity":1,"message":"165","line":60,"column":29,"nodeType":"166","endLine":60,"endColumn":49},{"ruleId":"164","severity":1,"message":"165","line":75,"column":29,"nodeType":"166","endLine":75,"endColumn":49},{"ruleId":"164","severity":1,"message":"165","line":90,"column":29,"nodeType":"166","endLine":90,"endColumn":49},{"ruleId":"151","severity":1,"message":"167","line":42,"column":33,"nodeType":"153","endLine":42,"endColumn":48,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchCep'. Either include it or remove the dependency array.","ArrayExpression",["171"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'handleScroll' and 'props.showBackground'. Either include them or remove the dependency array.",["172"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'cardGap'. Either include it or remove the dependency array.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [cep, searchCep]",{"range":"180","text":"181"},"Update the dependencies array to be: [handleScroll, props.showBackground]",{"range":"182","text":"183"},"Update the dependencies array to be: [cardGap, innerPostsRef]",{"range":"184","text":"185"},[3696,3701],"[cep, searchCep]",[1770,1772],"[handleScroll, props.showBackground]",[1387,1402],"[cardGap, innerPostsRef]"]